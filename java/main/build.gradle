/*
 * Copyright 2017-2018 Deltix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "java"
apply plugin: "maven-publish"

sourceCompatibility=1.8
targetCompatibility=1.8

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    baseName = archivesBaseName
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    baseName = archivesBaseName
    from javadoc.destinationDir
}

dependencies {
    compile 'org.ow2.asm:asm-tree:7.2'
    compile 'org.ow2.asm:asm-util:7.2'
    compile 'org.json:json:20171018'
}

task generateVersionJava {
    doLast {

        new File("$projectDir/src/main/java/com/epam/deltix/vtype/transformer/Version.java").text =
"""
// Autogenerated file, do not edit
package com.epam.deltix.vtype.transformer;

class  Version {
    public static final String version = \"$version\";
}
"""
    }
}

compileJava.dependsOn generateVersionJava

jar {
    manifest {
        attributes (
                "Implementation-Title": "Deltix Value Types For Java",
                "Implementation-Version": version,
                'PreMain-Class': 'com.epam.deltix.vtype.transformer.AgentPreMain',
                'Agent-Class': 'com.epam.deltix.vtype.transformer.AgentPreMain',
                'Can-Redefine-Classes': 'true',
                'Can-Retransform-Classes': 'false',
                'Can-Set-Native-Method-Prefix': 'false'
        )
    }
    from { fileTree(dir: 'src/main/java', includes: [ '**/*.class', '**/*.properties' ]) }
}
