apply plugin: "java"

sourceCompatibility=1.7
targetCompatibility=1.7

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'com.google.code.java-allocation-instrumenter:java-allocation-instrumenter:3.1.0'
    testCompile group: "junit", name: "junit", version: "4.+"
    testCompile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: "2.9.4"

    compile project(':java:dfp-stub')
    compile project(':java:value-types')
}

test {
    outputs.upToDateWhen { false }
    def disableAllocationDetector = true
    def javaAllocationInstrumenterJar = configurations.testCompile.find {it.name.startsWith('java-allocation-instrumenter')}
    def vtAgentJar = configurations.testCompile.find {it.name.startsWith('value-types-0')}

    def valueTypeAgent = '-javaagent:' + vtAgentJar + '=' + rootDir + "/cfg/valuetype-tests.json"
    jvmArgs += valueTypeAgent

    def allocationAgent = '-javaagent:' + javaAllocationInstrumenterJar

    if(disableAllocationDetector) {
        jvmArgs += '-Ddisable.allocation.detector=true'
    } else {
        jvmArgs += allocationAgent
    }

    print(jvmArgs)

    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}